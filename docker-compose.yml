version: '3.8'

services:
  backend:
    build: ./backend
    container_name: honeypot-backend
    ports:
      - "5000:5000"
    volumes:
      - ./backend/data:/app/data
      - ./backend/attacks.db:/app/attacks.db
    environment:
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build: ./frontend
    container_name: honeypot-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: PostgreSQL for production
  postgres:
    image: postgres:15-alpine
    container_name: honeypot-postgres
    environment:
      POSTGRES_DB: honeypot
      POSTGRES_USER: honeypot
      POSTGRES_PASSWORD: honeypot_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:

networks:
  default:
    name: honeypot-network
